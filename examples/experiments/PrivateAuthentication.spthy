theory PrivateAuthentication
begin

functions: penc/2, pdec/2, pk/1
equations: pdec(penc(m, pk(k)), k) = m

rule Setup: // Init 
 [ Fr(~k) ] --[ ]-> [ !SecKey($A,~k), Out(pk(~k)) ]

rule Session:
 [ !SecKey($A,~ka), !SecKey($B,~kb), !SecKey($C,~kc) ] --[ ]-> [ Session_Init(diff($A,$C),diff(~ka,~kc),$B,~kb), Session_Resp(diff($A,$C),diff(~ka,~kc),$B,~kb) ]

rule Initator:
 [ Fr(~ni), Session_Init($I,~ki,$B,~kb) ] --[ OUT_RI(penc(<~ni, pk(~ki)>, pk(~kb))) ]-> [ Out(penc(<~ni, pk(~ki)>, pk(~kb))) ]

rule Responder:
 [ Fr(~nb), Session_Resp($I,~ki,$B,~kb), In(penc(<ni, pk(~ki)>, pk(~kb))) ] --[ Finish(), IN_RR(penc(<ni, pk(~ki)>, pk(~kb)),ni) ]-> [ Out(penc(<ni, ~nb, pk(~kb)>, pk(~ki))) ]

rule Responder:
 [ Fr(~nb), Session_Resp($I,~ki,$B,~kb), In(penc(<ni, pk(ki1)>, pk(~kb))) ] --[ DisEq(~ki,ki1), Finish(), IN_RR(penc(<ni, pk(ki1)>, pk(~kb)),ni) ]-> [ Out(penc(~nb, pk(~ki))) ]

restriction DisEq:
 "All x y #i. DisEq(x, y) @ #i ==> not(x = y)"

lemma chains [sources]:
 "(All x ni #i. IN_RR(x,ni)@i
    ==> (Ex #j. KU(ni)@j & j < i)
      | (Ex #j. OUT_RI(x)@j & j < i))"

lemma executeable:
exists-trace
 "Ex #i. Finish()@i"

end
